name: CI/CD
on:
  push:
    branches: [ main ]
  pull_request: {}
env:
  node-version: 16.x
jobs:
  Install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
      - name: Cache modules
        id: cache
        uses: actions/cache@v2
        env: { cache-name: node-modules }
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
      - name: Install modules
        run: yarn install --frozen-lockfile
        if: steps.cache.outputs.cache-hit != 'true'
  Build:
    runs-on: ubuntu-latest
    needs: [Install]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
      - name: Cache modules
        id: cache
        uses: actions/cache@v2
        env: {cache-name: node-modules}
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
      - name: Install modules
        run: yarn install --frozen-lockfile
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Build
        run: yarn build
  Test:
    runs-on: ubuntu-latest
    needs: [ Install ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
      - name: Cache modules
        id: cache
        uses: actions/cache@v2
        env: { cache-name: node-modules }
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
      - name: Install modules
        run: yarn install --frozen-lockfile
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Test
        id: test
        run: yarn test --coverage --json --outputFile=result.json --testLocationInResults
      - name: Report
        uses: tanmen/jest-reporter@v1
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  Publish:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [ Test, Build ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
          registry-url: https://registry.npmjs.org/
      - name: Cache modules
        id: cache
        uses: actions/cache@v2
        env: { cache-name: node-modules }
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
      - name: Install modules
        run: yarn install --frozen-lockfile
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Publish
        run: yarn semantic-release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
